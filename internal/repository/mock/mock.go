// Code generated by MockGen. DO NOT EDIT.
// Source: C:/Users/vadim/OneDrive/Документы/TestTaskJavaCode/internal/repository/wallet_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWalletRepository is a mock of WalletRepository interface.
type MockWalletRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWalletRepositoryMockRecorder
}

// MockWalletRepositoryMockRecorder is the mock recorder for MockWalletRepository.
type MockWalletRepositoryMockRecorder struct {
	mock *MockWalletRepository
}

// NewMockWalletRepository creates a new mock instance.
func NewMockWalletRepository(ctrl *gomock.Controller) *MockWalletRepository {
	mock := &MockWalletRepository{ctrl: ctrl}
	mock.recorder = &MockWalletRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletRepository) EXPECT() *MockWalletRepositoryMockRecorder {
	return m.recorder
}

// Deposit mocks base method.
func (m *MockWalletRepository) Deposit(walletID string, amount float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deposit", walletID, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deposit indicates an expected call of Deposit.
func (mr *MockWalletRepositoryMockRecorder) Deposit(walletID, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deposit", reflect.TypeOf((*MockWalletRepository)(nil).Deposit), walletID, amount)
}

// GetWalletBalance mocks base method.
func (m *MockWalletRepository) GetWalletBalance(walletID string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletBalance", walletID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletBalance indicates an expected call of GetWalletBalance.
func (mr *MockWalletRepositoryMockRecorder) GetWalletBalance(walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletBalance", reflect.TypeOf((*MockWalletRepository)(nil).GetWalletBalance), walletID)
}

// Withdraw mocks base method.
func (m *MockWalletRepository) Withdraw(walletID string, amount float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw", walletID, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockWalletRepositoryMockRecorder) Withdraw(walletID, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockWalletRepository)(nil).Withdraw), walletID, amount)
}
